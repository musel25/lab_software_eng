%% GitHub-friendly approximation of a SysML Internal Block Diagram
%% Blocks are drawn as classes; ports appear as class members; interfaces are
%% labelled on the connectors.

classDiagram
    %% ────────── Central use-case block ──────────
    class iUc1ControlEntry {
        <<block>>
        +pUser : port
        +pAdmin : port
        +pCamera : port
        +pAccessPoint : port
        --
        ScFailCount
        BFailCount
        tBs        /* timers etc. */
        tUnlock
        AuthenticationStatus
        CardStatus
        --
        readSecurityCard()
        validateSecurityCard()
        displayCardStatus()
        scanBiometricData()
        authenticateBiometricData()
        displayAuthenticationStatus()
        logEntryData()
        unlockAccessPoint()
        lockAccessPoint()
        disableUserAccount()
        logAccountData()
        alarm()
        resetAlarm()
    }

    %% ────────── Actor instances (as proxy blocks) ──────────
    class ibUser {
        <<actor>>
        +reqRequestEntry()
        +scanFingerprint()
        +requestExit()
    }

    class ibAdmin {
        <<actor>>
        +reqProcessAlert()
    }

    class ibCamera {
        <<actor>>
        +reqTakeSnapshot()
    }

    class ibAccessPoint {
        <<actor>>
        +reqUnlockAccessPoint()
        +reqLockAccessPoint()
    }

    %% ────────── Interface-labelled connectors ──────────
    ibUser        -->|I_User_Uc1ControlEntry|        iUc1ControlEntry : pUser
    ibAdmin       -->|I_Admin_Uc1ControlEntry|       iUc1ControlEntry : pAdmin
    ibCamera      -->|I_Camera_Uc1ControlEntry|      iUc1ControlEntry : pCamera
    ibAccessPoint -->|I_AccessPoint_Uc1ControlEntry| iUc1ControlEntry : pAccessPoint
